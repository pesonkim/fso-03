{"version":3,"sources":["services/contacts.js","App.js","index.js"],"names":["baseurl","axios","get","then","response","data","newObject","post","id","delete","put","Person","name","number","handleDelete","onClick","Display","persons","map","person","Filter","filter","setFilter","value","onChange","event","target","Form","handleSubmit","setName","setNumber","onSubmit","type","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","errorMessage","setErrorMessage","useEffect","contactService","contacts","personsToShow","toLowerCase","includes","preventDefault","check","console","log","length","window","confirm","returned","note","setTimeout","catch","error","concat","find","n","ReactDOM","render","document","getElementById"],"mappings":"yLAEMA,EAAU,oCAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACG,GAEZ,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMS,IAAN,UAAaV,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCjBvCM,EAAS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAC5B,OACI,gCACKF,EADL,IACYC,EADZ,IACoB,wBAAQE,QAASD,EAAjB,wBAKtBE,EAAU,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASH,EAAmB,EAAnBA,aACxB,OACI,8BACKG,EAAQC,KAAI,SAAAC,GAAM,OACf,cAAC,EAAD,CAA0BP,KAAMO,EAAOP,KAAMC,OAAQM,EAAON,OAAQC,aAAc,kBAAMA,EAAaK,EAAOX,MAA/FW,EAAOP,YAM9BQ,EAAS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACtB,OACI,qDACsB,uBAAOC,MAAOF,EAAQG,SAAU,SAACC,GAAD,OAAWH,EAAUG,EAAMC,OAAOH,cAK1FI,EAAO,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,aAAchB,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,OAAQgB,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACjD,OACI,uBAAMC,SAAUH,EAAhB,UACI,yCACU,uBAAOL,MAAOX,EAAMY,SAAU,SAACC,GAAD,OAAWI,EAAQJ,EAAMC,OAAOH,aAExE,2CACY,uBAAOA,MAAOV,EAAQW,SAAU,SAACC,GAAD,OAAWK,EAAUL,EAAMC,OAAOH,aAE9E,8BACI,wBAAQS,KAAK,SAAb,uBAMVC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAWpB,OAAgB,OAAZA,EACO,KAIP,qBAAKC,MAfK,CACVC,MAAO,MACPC,WAAY,YACZC,SAAU,OACVC,YAAa,QACbC,aAAc,MACdC,QAAS,OACTC,aAAc,QAQd,SACKR,KAiHES,EA5GH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACP3B,EADO,KACE4B,EADF,OAEgBD,mBAAS,IAFzB,mBAEPE,EAFO,KAEEC,EAFF,OAGoBH,mBAAS,IAH7B,mBAGPI,EAHO,KAGIC,EAHJ,OAIcL,mBAAS,IAJvB,mBAIPvB,EAJO,KAICC,EAJD,OAK0BsB,mBAAS,MALnC,mBAKPM,EALO,KAKOC,EALP,KAOdC,qBAAU,WACNC,IAEKlD,MAAK,SAAAmD,GACFT,EAAWS,QAEpB,IAEH,IA4EMC,EAA4B,KAAXlC,EACjBJ,EACAA,EAAQI,QAAO,SAAAF,GAAM,OAAIA,EAAOP,KAAK4C,cAAcC,SAASpC,EAAOmC,kBAEzE,OACI,gCACI,2CACA,cAAC,EAAD,CAActB,QAASgB,IACvB,cAAC,EAAD,CAAQ7B,OAAQA,EAAQC,UAAWA,IACnC,2CACA,cAAC,EAAD,CAAMM,aAtFO,SAACH,GAClBA,EAAMiC,iBAEN,IAAIC,EAAQ1C,EAAQI,QAAO,SAAAF,GAAM,OAAIA,EAAOP,OAASkC,KACrDc,QAAQC,IAAIF,GACRA,EAAMG,OAAS,GACXC,OAAOC,QAAP,UAAkBlB,EAAlB,4EACAO,EACYM,EAAM,GAAGnD,GADrB,2BAC8BmD,EAAM,IADpC,IACwC9C,OAAQmC,KAC3C7C,MAAK,SAAA8D,GACFpB,EAAW5B,EAAQC,KAAI,SAAAgD,GAAI,OAAIA,EAAK1D,KAAOmD,EAAM,GAAGnD,GAAKyD,EAAWC,MACpEf,EAAgB,oBAAD,OACSL,EADT,MAGfqB,YAAW,WACPhB,EAAgB,QACjB,QAENiB,OAAM,SAAAC,GACHlB,EAAgBkB,EAAMjE,SAASC,KAAKgE,OACpCF,YAAW,WACPhB,EAAgB,QACjB,QAIH,KAAZL,GAAmC,IAAjBa,EAAMG,QACxBT,EACY,CAAEzC,KAAMkC,EAASjC,OAAQmC,IAChC7C,MAAK,SAAAC,GACFyC,EAAW5B,EAAQqD,OAAOlE,IAC1B+C,EAAgB,kBAAD,OACOL,EADP,MAGfqB,YAAW,WACPhB,EAAgB,QACjB,KACHJ,EAAW,IACXE,EAAa,OAEhBmB,OAAM,SAAAC,GACHlB,EAAgBkB,EAAMjE,SAASC,KAAKgE,OACpCF,YAAW,WACPhB,EAAgB,QACjB,SA0CuBvC,KAAMkC,EAASjC,OAAQmC,EAAWnB,QAASkB,EAAYjB,UAAWmB,IACpG,yCACA,cAAC,EAAD,CAAShC,QAASsC,EAAezC,aAvClB,SAACN,GACpB,IAAMI,EAAOK,EAAQsD,MAAK,SAAAC,GAAC,OAAIA,EAAEhE,KAAOA,KAEpCuD,OAAOC,QAAP,iBAAyBpD,EAAKA,KAA9B,QACAyC,EACY7C,GACPL,MAAK,SAAAC,GACFyC,EAAW5B,EAAQI,QAAO,SAAAF,GAAM,OAAIA,EAAOX,KAAOA,MAClD2C,EAAgB,oBAAD,OACSvC,EAAKA,KADd,MAGfuD,YAAW,WACPhB,EAAgB,QACjB,QAENiB,OAAM,SAAAC,GACHxB,EAAW5B,EAAQI,QAAO,SAAAF,GAAM,OAAIA,EAAOX,KAAOA,MAClD2C,EAAgB,YAAD,OACCvC,EAAKA,KADN,sCAGfuD,YAAW,WACPhB,EAAgB,QACjB,eCvJvBsB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.82cd97aa.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseurl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseurl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseurl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseurl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseurl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import { useEffect, useState } from 'react'\n\nimport contactService from './services/contacts'\n\nconst Person = ({ name, number, handleDelete }) => {\n    return (\n        <div>\n            {name} {number} <button onClick={handleDelete}>delete</button>\n        </div>\n    )\n}\n\nconst Display = ({ persons, handleDelete }) => {\n    return (\n        <div>\n            {persons.map(person =>\n                <Person key={person.name} name={person.name} number={person.number} handleDelete={() => handleDelete(person.id)} />\n            )}\n        </div>\n    )\n}\n\nconst Filter = ({ filter, setFilter }) => {\n    return (\n        <div>\n            filter shown with <input value={filter} onChange={(event) => setFilter(event.target.value)} />\n        </div>\n    )\n}\n\nconst Form = ({ handleSubmit, name, number, setName, setNumber }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                name: <input value={name} onChange={(event) => setName(event.target.value)} />\n            </div>\n            <div>\n                number: <input value={number} onChange={(event) => setNumber(event.target.value)} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nconst Notification = ({ message }) => {\n    const style = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={style}>\n            {message}\n        </div>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        contactService\n            .getAll()\n            .then(contacts => {\n                setPersons(contacts)\n            })\n    }, [])\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        let check = persons.filter(person => person.name === newName)\n        console.log(check)\n        if (check.length > 0) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                contactService\n                    .update(check[0].id, { ...check[0], number: newNumber })\n                    .then(returned => {\n                        setPersons(persons.map(note => note.id === check[0].id ? returned : note))\n                        setErrorMessage(\n                            `Updated contact '${newName}'`\n                        )\n                        setTimeout(() => {\n                            setErrorMessage(null)\n                        }, 5000)\n                    })\n                    .catch(error => {\n                        setErrorMessage(error.response.data.error)\n                        setTimeout(() => {\n                            setErrorMessage(null)\n                        }, 5000)\n                    })\n            }\n        }\n        if (newName !== '' && check.length === 0) {\n            contactService\n                .create({ name: newName, number: newNumber })\n                .then(response => {\n                    setPersons(persons.concat(response))\n                    setErrorMessage(\n                        `Added contact '${newName}'`\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                    setNewName('')\n                    setNewNumber('')\n                })\n                .catch(error => {\n                    setErrorMessage(error.response.data.error)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const handleDeleteOf = (id) => {\n        const name = persons.find(n => n.id === id)\n\n        if (window.confirm(`Delete ${name.name} ?`)) {\n            contactService\n                .remove(id)\n                .then(response => {\n                    setPersons(persons.filter(person => person.id !== id))\n                    setErrorMessage(\n                        `Removed contact '${name.name}'`\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setPersons(persons.filter(person => person.id !== id))\n                    setErrorMessage(\n                        `Contact '${name.name}' was already removed from server`\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const personsToShow = (filter === '')\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={errorMessage} />\n            <Filter filter={filter} setFilter={setFilter} />\n            <h3>Add a new</h3>\n            <Form handleSubmit={handleSubmit} name={newName} number={newNumber} setName={setNewName} setNumber={setNewNumber} />\n            <h3>Numbers</h3>\n            <Display persons={personsToShow} handleDelete={handleDeleteOf} />\n        </div>\n    )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}